// src/services/customerProfileService.js
import apiService from './api';

/**
 * Customer Profile Service
 * API: /api/customer/profile/me (GET, PUT)
 *
 * ‚ö†Ô∏è QUAN TR·ªåNG: BE tr·∫£ v·ªÅ PascalCase
 * Response structure: { Success, Message, Data }
 * Data fields: CustomerId, FullName, PhoneNumber, Email, Address, DateOfBirth, Gender,
 *              TotalSpent, LoyaltyPoints, CustomerType: { TypeName, DiscountPercent }
 */
export const customerProfileService = {
  /**
   * GET /api/customer/profile/me
   * L·∫•y th√¥ng tin h·ªì s∆° kh√°ch h√†ng
   */
  async getProfile() {
    try {
      console.log('üì• [customerProfileService] Calling API: GET /api/customer/profile/me');

      const response = await apiService.getCustomerProfile();

      console.log('üì¶ [customerProfileService] Raw API response:', response);
      console.log('üì¶ [customerProfileService] Response type:', typeof response);
      console.log('üì¶ [customerProfileService] Response keys:', Object.keys(response || {}));

      // ‚úÖ BE TH·ª∞C T·∫æ TR·∫¢ V·ªÄ LOWERCASE (theo CUSTOMER_API_ENDPOINTS.md)
      // Response: { success: true, message: "...", data: {...} }
      return {
        success: response.success || false,
        message: response.message || '',
        data: response.data || null,
        errorCode: response.errorCode || null
      };
    } catch (error) {
      console.error('‚ùå [customerProfileService] Get profile failed:', error);
      throw error;
    }
  },

  /**
   * PUT /api/customer/profile/me
   * C·∫≠p nh·∫≠t th√¥ng tin h·ªì s∆° kh√°ch h√†ng
   */
  async updateProfile(userData) {
    try {
      console.log('üì§ [customerProfileService] Updating profile with:', userData);

      const response = await apiService.updateCustomerProfile({
        fullName: userData.fullName,
        phoneNumber: userData.phoneNumber,
        address: userData.address,
        dateOfBirth: userData.dateOfBirth,
        gender: userData.gender,
        preferredLanguage: 'vi-VN', // M·∫∑c ƒë·ªãnh ti·∫øng Vi·ªát
        marketingOptIn: true // M·∫∑c ƒë·ªãnh ƒë·ªìng √Ω nh·∫≠n th√¥ng tin marketing
      });

      console.log('üì¶ [customerProfileService] Update response:', response);

      // ‚úÖ BE TH·ª∞C T·∫æ TR·∫¢ V·ªÄ LOWERCASE (theo CUSTOMER_API_ENDPOINTS.md)
      return {
        success: response.success || false,
        message: response.message || '',
        data: response.data || null,
        errorCode: response.errorCode || null
      };
    } catch (error) {
      console.error('‚ùå [customerProfileService] Update profile failed:', error);
      throw error;
    }
  },

  /**
   * L·∫•y th√¥ng tin ƒë·∫ßy ƒë·ªß (bao g·ªìm loyalty points, customer type, etc.)
   */
  async getFullProfile() {
    try {
      const response = await this.getProfile();
      if (response.success) {
        return response.data;
      }
      throw new Error(response.message || 'Failed to get profile');
    } catch (error) {
      console.error('‚ùå Get full profile failed:', error);
      throw error;
    }
  },

  /**
   * C·∫≠p nh·∫≠t m·ªôt ph·∫ßn th√¥ng tin profile
   */
  async partialUpdate(partialData) {
    try {
      // L·∫•y profile hi·ªán t·∫°i
      const currentProfile = await this.getFullProfile();

      // Merge v·ªõi d·ªØ li·ªáu m·ªõi
      const updatedData = {
        ...currentProfile,
        ...partialData
      };

      return await this.updateProfile(updatedData);
    } catch (error) {
      console.error('‚ùå Partial update failed:', error);
      throw error;
    }
  }
};

export default customerProfileService;
